{"version":3,"sources":["Reducer/CounterReducer.jsx","Components/Counter.jsx","Components/UseContext.js","types/types.js","Reducer/authReducer.js","Components/Longin.jsx","actions/authAction.js","routers/AuthRouter.js","Components/Navbar.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","index.js"],"names":["initialState","count","countInterval","increment","CounterReducer","state","action","type","parseInt","Counter","useReducer","dispatch","className","id","defaultChecked","onChange","e","checked","target","htmlFor","value","onClick","UserContext","createContext","types","auth","authReducer","uid","payload","name","displayName","Longin","useContext","isAuth","setIsAuth","console","log","tipe","placeholder","required","params","AuthRouter","exact","path","component","to","Navbar","class","aria-current","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","useState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eba47c7d.chunk.js","sourcesContent":["export const initialState = {\r\n    count:0,\r\n    countInterval:1,\r\n    increment:true\r\n}\r\n\r\n\r\nexport const CounterReducer = (state,action) => {\r\n\r\n   switch (action.type) {\r\n       case \"INCREMENT\":\r\n           return {\r\n               ...state,\r\n               increment: action.increment\r\n           }\r\n        case \"SET INTERVAL\":\r\n            return{\r\n                ...state,\r\n                countInterval: parseInt(action.countInterval)\r\n            }\r\n        case \"INCREASE_COUNT\":\r\n            return{\r\n                ...state,\r\n                count:state.count + state.countInterval\r\n            }\r\n        case \"DECREASE_COUNT\":\r\n            return{\r\n                ...state,\r\n                count:state.count - state.countInterval\r\n            }\r\n\r\n        case \"RESTART\":\r\n            return initialState;\r\n        \r\n       default:\r\n           return state\r\n   }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport {CounterReducer, initialState} from '../Reducer/CounterReducer'\r\n\r\nconst Counter = () =>{\r\n\r\n    const[state,dispatch] = useReducer(CounterReducer,initialState)\r\n\r\n    const handleIncrement = (e) =>{\r\n        const {checked} = e.target;\r\n        dispatch({type:\"INCREMENT\", increment:checked })\r\n    }\r\n    const handleCountInterval = (e) =>{\r\n        const {value} = e.target;\r\n        dispatch({type:\"SET INTERVAL\", countInterval:value })\r\n    }\r\n    const handleCount = (e) =>{\r\n        if(state.increment){\r\n            dispatch({type:\"INCREASE_COUNT\" })\r\n        }else{\r\n            dispatch({type:\"DECREASE_COUNT\" })\r\n        }\r\n    }\r\n    const handleRestart = (e) =>{\r\n        dispatch({type:\"RESTART\" })\r\n    }\r\n\r\n    return(\r\n        <div className=\"padre\">\r\n            <h1 id=\"title\">HOOK USEREDUCER BY DAVID</h1>\r\n            <p id=\"cuenta\">{\"Cuenta: \" + state.count}</p>\r\n            <div>\r\n                <input\r\n                type=\"checkbox\"\r\n                id=\"check\"\r\n                defaultChecked={state.increment}\r\n                onChange={handleIncrement}\r\n                />\r\n                <label htmlFor=\"check\">{\"Incrementar\"}</label>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label id=\"cuenta\" htmlFor=\"interval\">{\"Intervalo\"}</label>\r\n                <input\r\n                type=\"text\"\r\n                id=\"interval\"\r\n                value={state.countInterval}\r\n                onChange={handleCountInterval}\r\n                />\r\n            </div>\r\n            <br/>\r\n            <button id=\"btn1\" onClick={handleCount}>{state.increment ? \"INCREMENTAR\": \"DECREMENTAR\"}</button>\r\n            <button id=\"btn2\"onClick={handleRestart}>{\"REINICIAR\"}</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter;\r\n","import {createContext} from 'react'\r\n\r\n\r\nexport const UserContext = createContext(null)","export const types={\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const initialState ={\r\n    auth:{}\r\n}\r\n\r\nexport const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name:  action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useContext, useReducer } from 'react'\r\nimport { authReducer, initialState } from '../Reducer/authReducer'\r\nimport {login} from '../actions/authAction'\r\nimport { UserContext } from './UseContext'\r\n\r\nconst Longin = () => {\r\n\r\n    const {isAuth,setIsAuth} = useContext(UserContext)\r\n\r\n    const [state, dispatch] = useReducer(authReducer, initialState)\r\n\r\n    const handleLogin = (params) => {\r\n        dispatch(login('123','David Cardona'))\r\n        setIsAuth(true)\r\n    }\r\n    \r\n\r\n    console.log(state)\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <hr />\r\n            <label>EMAIL: </label>\r\n            <input\r\n            id=\"email\"\r\n            tipe=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            />\r\n            <br/>\r\n            <br />\r\n            <label>PASSWORD:</label>\r\n            <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            />\r\n\r\n            <p>\r\n            {state.name}\r\n            {state.uid}\r\n            </p>\r\n            <br />\r\n            <p>{isAuth}</p>\r\n            <button \r\n                className=\"btn btn-primary\" \r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n            <button \r\n                className=\"btn btn-danger\" \r\n            >\r\n                Logout\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Longin","import { types } from '../types/types'\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\nimport Longin from '../Components/Longin'\r\n\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\"  component={Longin}/>\r\n \r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRouter\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from './UseContext'\r\nconst Navbar = () => {\r\n    const { setIsAuth } = useContext(UserContext)\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div class=\"container-fluid\">\r\n                <Link class=\"navbar-brand\" to=\"/\">useReducer</Link>\r\n\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div class=\"navbar-nav\">\r\n                        <Link class=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        <Link class=\"nav-link\" to=\"/auth/login\">Login</Link>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                    <button \r\n                        class=\"btn btn-outline-success\"\r\n                        type=\"submit\"\r\n                        onClick={()=>setIsAuth(false)}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Navbar from '../Components/Navbar'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )//true\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated ) //false\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useState } from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nimport Counter from '../Components/Counter'\r\nimport { UserContext } from '../Components/UseContext'\r\nimport AuthRouter from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nconst AppRouter = () => {\r\n\r\n\r\n\r\n    const [isAuth, setIsAuth] = useState(false)\r\n\r\n    return (\r\n        <UserContext.Provider value={{ isAuth, setIsAuth }}>\r\n            <Router>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isAuth}\r\n                    />\r\n                    <PrivateRoute\r\n                        path=\"/\"\r\n                        component={Counter}\r\n                        isAuthenticated={isAuth}\r\n                    />\r\n                </Switch>\r\n            </Router>\r\n        </UserContext.Provider >\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\nimport './Style/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter/>\n   </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}